set hidden true
set ignorecase true
set icons true
set sixel true
set rulerfmt "%d  |%a  |%p  |\033[7;31m %m \033[0m  |\033[7;33m %c \033[0m  |\033[7;35m %s \033[0m  |\033[7;34m %f \033[0m  |%i/%t"


# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.rar) unrar x "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *.7z) 7z e "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/*) lf -remote "send $id \$nvim \$fx";;
		*) xdg-open "$f"
	esac
}}

cmd on-select &{{
    lf -remote "send $id set statfmt \"$(exa -ld --color=always "$f")\""
}}

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}
map / :fzf_jump

cmd fzf_search ${{
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    res="$(
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1 | sed 's/\\/\\\\/g;s/"/\\"/g'
    )"
    [ -n "$res" ] && lf -remote "send $id select \"$res\""
}}
map <c-g> :fzf_search


# Bindings
map c
map d
map m

map au unarchive

# Basic Functions
map . set hidden!
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear


# Movement
map gd cd ~/dev
map gc cd ~/.config
